<?php
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Doubles\src\App\Controller\Web\Domain\SubDomain;

use OC\BusinessRules\Gateways\Pagination;
use OC\BusinessRules\Responders\PaginatedUseCaseResponse;
use OpenClassrooms\CodeGenerator\Tests\Doubles\src\App\ViewModels\Web\Domain\SubDomain\ListFunctionalEntities;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;

/**
 * @author Romain Kuzniak <romain.kuzniak@openclassrooms.com>
 */
class ListFunctionalEntitiesController extends Controller
{
    public function listFunctionalEntitiesAction(Request $request): Response
    {
        $functionalEntities = $this->getFunctionalEntities($request);
        $vm = $this->buildVm($functionalEntities);

        return $this->render('', ['vm' => $vm]);
    }

    private function getFunctionalEntities(Request $request): PaginatedUseCaseResponse
    {
        return $this->get('oc.business_rules.use_cases.domain.sub_domain.get_all_functional_entities')
            ->execute(
                $this->get('oc.business_rules.requestors.domain.sub_domain.get_all_functional_entities_request_builder')
                    ->create()
                    ->withItemsPerPage(Pagination::ITEMS_PER_PAGE_ADMIN)
                    ->withPage($request->get('page', 1))
                    ->build()
            );
    }

    private function buildVm(PaginatedUseCaseResponse $response): ListFunctionalEntities
    {
        return
            $this->get('oc.app.view_models.web.domain.sub_domain.list_functional_entities_builder')
                ->create()
                ->withFunctionalEntities($this->get('oc.app.view_models.web.domain.sub_domain.functional_entity_list_item_assembler')->createListItems($response->getItems()))
                ->withPagination($this->get('oc.view_models.pagination.pagination_factory')->createFromPaginatedUseCaseResponse($response, 'oc_web_domain_sub_domain_list_functional_entities'))
                ->build();
    }
}
