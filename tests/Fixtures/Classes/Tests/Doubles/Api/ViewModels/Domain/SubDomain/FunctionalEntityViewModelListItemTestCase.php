<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\Api\ViewModels\Domain\SubDomain;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Api\ViewModels\Domain\SubDomain\FunctionalEntityViewModelListItem;
use PHPUnit\Framework\Assert as Assert;

trait FunctionalEntityViewModelListItemTestCase
{
    use FunctionalEntityViewModelTestCase;

    /**
     * @param FunctionalEntityViewModelListItem[] $expected
     * @param FunctionalEntityViewModelListItem[] $actual
     */
    protected function assertFunctionalEntityViewModelListItems(array $expected, array $actual): void
    {
        Assert::assertCount(count($expected), $actual);
        foreach ($expected as $key => $item) {
            $this->assertFunctionalEntityViewModelListItem($item, $actual[$key]);
        }
    }

    private function assertFunctionalEntityViewModelListItem(FunctionalEntityViewModelListItem $expected, FunctionalEntityViewModelListItem $actual): void
    {
        $this->assertFunctionalEntityViewModel($expected, $actual);
    }
}
