<?php declare(strict_types=1);
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Api\ViewModels\Domain\SubDomain\Impl;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Api\ViewModels\Domain\SubDomain\FunctionalEntityDetailAssembler;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Api\ViewModels\Domain\SubDomain\Impl\FunctionalEntityDetailAssemblerImpl;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\Api\ViewModels\Domain\SubDomain\FunctionalEntityDetailStub1;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\Api\ViewModels\Domain\SubDomain\FunctionalEntityDetailTestCase;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\BusinessRules\Responders\Domain\SubDomain\FunctionalEntityDetailResponseStub1;
use PHPUnit\Framework\TestCase;

class FunctionalEntityDetailAssemblerImplTest extends TestCase
{
    use FunctionalEntityDetailTestCase;

    /**
     * @var FunctionalEntityDetailAssembler
     */
    private $assembler;

    /**
     * @test
     */
    final public function onCreateShouldReturnViewModel(): void
    {
        $actual = $this->assembler->create(new FunctionalEntityDetailResponseStub1());
        $expected = new FunctionalEntityDetailStub1();
        $this->assertFunctionalEntityDetailTestCase($expected, $actual);
    }

    protected function setUp(): void
    {
        $this->assembler = new FunctionalEntityDetailAssemblerImpl();
    }
}
