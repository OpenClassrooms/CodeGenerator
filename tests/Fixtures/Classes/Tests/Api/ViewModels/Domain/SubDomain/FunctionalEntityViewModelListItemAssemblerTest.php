<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Api\ViewModels\Domain\SubDomain;

use OC\Assert;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Api\ViewModels\Domain\SubDomain\FunctionalEntityViewModelListItemAssembler;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\Api\ViewModels\Domain\SubDomain\FunctionalEntityViewModelListItemStub1;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\Tests\Doubles\BusinessRules\Responders\Domain\SubDomain\FunctionalEntityListItemResponseStub1;
use PHPUnit\Framework\TestCase;

final class FunctionalEntityViewModelListItemAssemblerTest extends TestCase
{
    private FunctionalEntityViewModelListItemAssembler $assembler;

    /** @test */
    public function onCreateShouldReturnViewModel(): void
    {
        $actual = $this->assembler->createListItems([new FunctionalEntityListItemResponseStub1()]);
        $expected = [new FunctionalEntityViewModelListItemStub1()];
        Assert::assertObjectsEqual($expected, $actual);
    }

    protected function setUp(): void
    {
        $this->assembler = new FunctionalEntityViewModelListItemAssembler();
    }
}
