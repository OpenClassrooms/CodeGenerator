<?php declare(strict_types=1);
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Entities\Domain\SubDomain\FunctionalEntity;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\FunctionalEntityGateway;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\GetFunctionalEntityRequest;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Responders\Domain\SubDomain\FunctionalEntityDetailResponseAssembler;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Responders\Domain\SubDomain\FunctionalEntityResponse;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCase;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCaseRequest;

/**
 * @author authorStub <author.stub@example.com>
 */
class GetFunctionalEntity implements UseCase
{
    /**
     * @var FunctionalEntityGateway
     */
    private $entityGateway;

    /**
     * @var FunctionalEntityDetailResponseAssembler
     */
    private $entityResponseAssembler;

    /**
     * @param GetFunctionalEntityRequest $useCaseRequest
     *
     * @return FunctionalEntityResponse
     *
     * @throws \OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain\Exceptions\FunctionalEntityNotFoundException
     */
    public function execute(UseCaseRequest $useCaseRequest)
    {
        $functionalEntity = $this->getFunctionalEntity($useCaseRequest->getFunctionalEntityId());

        return $this->buildResponse($functionalEntity);
    }

    /**
     * @throws Exceptions\FunctionalEntityNotFoundException
     */
    private function getFunctionalEntity(int $functionalEntityId): FunctionalEntity
    {
        return $this->entityGateway->find($functionalEntityId);
    }

    private function buildResponse(FunctionalEntity $functionalEntity): FunctionalEntityResponse
    {
        return $this->entityResponseAssembler->create($functionalEntity);
    }

    public function setFunctionalEntityGateway(FunctionalEntityGateway $gateway): void
    {
        $this->entityGateway = $gateway;
    }

    public function setFunctionalEntityResponseAssembler(FunctionalEntityDetailResponseAssembler $assembler): void
    {
        $this->entityResponseAssembler = $assembler;
    }
}
