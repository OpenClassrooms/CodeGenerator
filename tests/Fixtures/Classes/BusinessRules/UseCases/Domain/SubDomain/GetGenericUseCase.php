<?php declare(strict_types=1);
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\GenericUseCaseRequest;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCase;
use OpenClassrooms\UseCase\BusinessRules\Requestors\UseCaseRequest;

/**
 * @author authorStub <author.stub@example.com>
 */
class GetGenericUseCase implements UseCase
{
    /**
     * @var GenericUseCaseGateway
     */
    private $genericUseCaseGateway;

    /**
     * @var GenericUseCaseResponseAssembler
     */
    private $genericUseCaseResponseAssembler;

    /**
     * @param GenericUseCaseRequest $useCaseRequest
     *
     * @throws \OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain\Exceptions\GenericUseCaseNotFoundException
     */
    public function execute(UseCaseRequest $useCaseRequest)
    {
        $genericUseCase = $this->getGenericUseCase($useCaseRequest->getGenericUseCaseId());

        return $this->genericUseCaseResponseAssembler->createFromGenericUseCase($genericUseCase);
    }

    /**
     * @throws Exceptions\GenericUseCaseNotFoundException
     */
    private function getGenericUseCase(int $genericUseCaseId): GenericUseCase
    {
        return $this->genericUseCaseGateway->find($genericUseCaseId);
    }

    public function setGenericUseCaseGateway(GenericUseCaseGateway $genericUseCaseGateway)
    {
        $this->genericUseCaseGateway = $genericUseCaseGateway;
    }

    public function setGenericUseCaseResponseAssembler(
        GenericUseCaseResponseAssembler $genericUseCaseResponseAssembler
    )
    {
        $this->genericUseCaseResponseAssembler = $genericUseCaseResponseAssembler;
    }
}
