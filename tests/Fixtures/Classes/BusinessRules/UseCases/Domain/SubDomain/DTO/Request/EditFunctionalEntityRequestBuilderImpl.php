<?php declare(strict_types=1);
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain\DTO\Request;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\EditFunctionalEntityRequest;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\EditFunctionalEntityRequestBuilder;

class EditFunctionalEntityRequestBuilderImpl implements EditFunctionalEntityRequestBuilder
{
    /**
     * @var EditFunctionalEntityRequestDTO
     */
    private $request;

    public function build(): EditFunctionalEntityRequest
    {
        return $this->request;
    }

    public function create(): EditFunctionalEntityRequestBuilder
    {
        $this->request = new EditFunctionalEntityRequestDTO();

        return $this;
    }

    public function forFunctionalEntity(int $id): EditFunctionalEntityRequestBuilder
    {
        $this->request->functionalEntityId = $id;

        return $this;
    }

    public function withField1(string $field1): EditFunctionalEntityRequestBuilder
    {
        $this->request->field1 = $field1;
        $this->request->field1Updated = true;

        return $this;
    }

    public function withField2(array $field2 = []): EditFunctionalEntityRequestBuilder
    {
        $this->request->field2 = $field2;
        $this->request->field2Updated = true;

        return $this;
    }

    public function withField3(bool $field3): EditFunctionalEntityRequestBuilder
    {
        $this->request->field3 = $field3;
        $this->request->field3Updated = true;

        return $this;
    }

    public function withField4(\DateTimeInterface $field4): EditFunctionalEntityRequestBuilder
    {
        $this->request->field4 = $field4;
        $this->request->field4Updated = true;

        return $this;
    }
}
