<?php declare(strict_types=1);
// Auto Generated by OpenClassrooms Code Generator

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\UseCases\Domain\SubDomain\DTO\Request;

use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\GetFunctionalEntitiesRequest;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Requestors\Domain\SubDomain\GetFunctionalEntitiesRequestBuilder;

/**
 * @author authorStub <author.stub@example.com>
 */
class GetFunctionalEntitiesRequestBuilderImpl implements GetFunctionalEntitiesRequestBuilder
{
    /**
     * @var GetFunctionalEntitiesRequestDTO
     */
    private $request;

    public function create(): GetFunctionalEntitiesRequestBuilder
    {
        $this->request = new GetFunctionalEntitiesRequestDTO();

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function withFilters(array $filters = []): GetFunctionalEntitiesRequestBuilder
    {
        $this->request->filters = $filters;

        return $this;
    }

    public function withItemsPerPage(int $itemsPerPage): GetFunctionalEntitiesRequestBuilder
    {
        $this->request->itemsPerPage = $itemsPerPage;

        return $this;
    }

    public function withPage(int $page = 1): GetFunctionalEntitiesRequestBuilder
    {
        $this->request->page = $page;

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function withSort(array $sort = []): GetFunctionalEntitiesRequestBuilder
    {
        $this->request->sorts = $sort;

        return $this;
    }

    public function build(): GetFunctionalEntitiesRequest
    {
        return $this->request;
    }
}
