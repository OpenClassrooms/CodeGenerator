<?php

// Auto Generated by OpenClassrooms Code Generator

declare(strict_types=1);

namespace OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\App\Repository\Domain\SubDomain;

use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\App\Entity\Domain\SubDomain\FunctionalEntityImpl;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Entities\Domain\SubDomain\FunctionalEntity;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Gateways\Domain\SubDomain\Exceptions\FunctionalEntityNotFoundException;
use OpenClassrooms\CodeGenerator\Tests\Fixtures\Classes\BusinessRules\Gateways\Domain\SubDomain\FunctionalEntityGateway;
use Symfony\Bridge\Doctrine\RegistryInterface;

class FunctionalEntityRepository extends ServiceEntityRepository implements FunctionalEntityGateway
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, FunctionalEntityImpl::class);
    }

    public function delete(FunctionalEntity $functionalEntity): void
    {
        $this->getEntityManager()->remove($functionalEntity);
    }

    public function findAll(array $filters = [], array $sorts = [], array $pagination = []): iterable
    {
        // TODO: Implement findAll() method.
    }

    public function findById(int $functionalEntityId): FunctionalEntity
    {
        $functionalEntity = parent::find($functionalEntityId);
        if (null === $functionalEntity) {
            throw new FunctionalEntityNotFoundException();
        }

        return $functionalEntity;
    }

    public function insert(FunctionalEntity $functionalEntity): void
    {
        $this->getEntityManager()->persist($functionalEntity);
    }

    public function update(FunctionalEntity $functionalEntity): void
    {
        $functionalEntity->update();
    }
}
