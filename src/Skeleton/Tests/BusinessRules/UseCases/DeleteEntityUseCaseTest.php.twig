{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.entityNotFoundExceptionClassName }};
use {{ skeletonModel.deleteEntityUseCaseRequestClassName }};
use {{ skeletonModel.deleteEntityUseCaseClassName }};
use {{ skeletonModel.deleteEntityUseCaseRequestBuilderImplClassName }};
use {{ skeletonModel.deleteEntityUseCaseRequestDTOClassName }};
use {{ skeletonModel.entityStubClassName }};
use {{ skeletonModel.inMemoryEntityGatewayClassName }};
use PHPUnit\Framework\TestCase;

final class {{ skeletonModel.shortName }} extends TestCase
{
    private {{ skeletonModel.deleteEntityUseCaseRequestDTOShortName }} $request;

    private {{ skeletonModel.deleteEntityUseCaseShortName }} $useCase;

    /**
     * @test
     */
    public function {{ skeletonModel.entityArgument }}NotFoundThrowException(): void
    {
        $this->expectException({{ skeletonModel.entityNotFoundExceptionShortName }}::class);

        $this->request->{{ skeletonModel.entityIdArgument }} = -1;
        $this->useCase->execute($this->request);
    }

    /** @test */
    public function {{ skeletonModel.deleteEntityUseCaseMethod }}(): void
    {
        $this->assertNotEmpty({{ skeletonModel.inMemoryEntityGatewayShortName }}::${{ skeletonModel.entitiesArgument }});
        $this->useCase->execute($this->request);

        $this->assertEmpty({{ skeletonModel.inMemoryEntityGatewayShortName }}::${{ skeletonModel.entitiesArgument }});
    }

    protected function setUp(): void
    {
        ${{ skeletonModel.entityStubArgument }} = [{{ skeletonModel.entityStubShortName }}::ID => new {{ skeletonModel.entityStubShortName }}()];
        $this->request = $this->buildRequest();
        $this->useCase = new {{ skeletonModel.deleteEntityUseCaseShortName }}(new {{ skeletonModel.inMemoryEntityGatewayShortName }}(${{ skeletonModel.entityStubArgument }}));
    }

    private function buildRequest(): {{ skeletonModel.deleteEntityUseCaseRequestShortName }}
    {
        return (new {{ skeletonModel.deleteEntityUseCaseRequestBuilderImplShortName }}())
            ->create()
            ->{{ skeletonModel.withEntityIdMethod }}({{ skeletonModel.entityStubShortName }}::ID)
            ->build();
    }
}
