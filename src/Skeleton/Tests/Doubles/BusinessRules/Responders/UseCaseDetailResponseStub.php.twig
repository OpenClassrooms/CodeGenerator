{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.parentClassName }};
use {{ skeletonModel.entityStubClassName }};

class {{ skeletonModel.shortName }} extends {{ skeletonModel.parentShortName }}
{
{% for constant in skeletonModel.constants | sortNameByAlpha %}
    public const {{ constant.name }} = {{ printValue(constant.value) }};
{% if not loop.last %}

{% endif %}
{% endfor %}

{% for field in skeletonModel.fields | sortNameByAlpha %}
{% if field.type in skeletonModel.dateTimeType %}
    public {{ field.type }} ${{ field.name }};
{% else %}
    public {{ field.type }} ${{ field.name }} = self::{{ field.value.name }};
{% endif %}
{% if not loop.last%}

{% endif %}
{% endfor %}
{% if skeletonModel.hasConstructor %}

    public function __construct()
    {
{% for field in skeletonModel.fields if field.type in skeletonModel.dateTimeType %}
        $this->{{ field.name }} = new \DateTimeImmutable(self::{{ field.value.name }});
{% endfor %}
    }
{% endif %}
}
