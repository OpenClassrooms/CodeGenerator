{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.getEntitiesUseCaseRequestClassName }};
use {{ skeletonModel.getEntitiesUseCaseRequestBuilderClassName }};

/**
 * @author {{ author }} <{{ authorEmail }}>
 */
class {{ skeletonModel.shortName }} implements {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
{
    /**
     * @var {{ skeletonModel.getEntitiesUseCaseRequestDTOShortName }}
     */
    private $request;

    public function create(): {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
    {
        $this->request = new {{ skeletonModel.getEntitiesUseCaseRequestDTOShortName }}();

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function withFilters(array $filters = []): {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
    {
        $this->request->filters = $filters;

        return $this;
    }

    public function withItemsPerPage(int $itemsPerPage): {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
    {
        $this->request->itemsPerPage = $itemsPerPage;

        return $this;
    }

    public function withPage(int $page = 1): {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
    {
        $this->request->page = $page;

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function withSort(array $sort = []): {{ skeletonModel.getEntitiesUseCaseRequestBuilderShortName }}
    {
        $this->request->sorts = $sort;

        return $this;
    }

    public function build(): {{ skeletonModel.getEntitiesUseCaseRequestShortName }}
    {
        return $this->request;
    }
}
