{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.entityClassName }};
use {{ skeletonModel.entityGatewayClassName }};
use {{ skeletonModel.deleteEntityUseCaseRequestClassName }};
use {{ skeletonModel.securityClassName }};
use {{ skeletonModel.transactionClassName }};
use {{ skeletonModel.useCaseClassName }};
use {{ skeletonModel.useCaseRequestClassName }};

class {{ skeletonModel.shortName }} implements UseCase
{
    private {{ skeletonModel.entityGatewayShortName }} ${{ skeletonModel.entityGatewayArgument }};

    public function __construct({{ skeletonModel.entityGatewayShortName }} ${{ skeletonModel.entityGatewayArgument }})
    {
        $this->{{ skeletonModel.entityGatewayArgument }} = ${{ skeletonModel.entityGatewayArgument }};
    }

    /**
     * @Transaction
     * @Security(roles="")
     *
     * @param {{ skeletonModel.deleteEntityUseCaseRequestShortName }} $useCaseRequest
     *
     * @throws \{{ skeletonModel.entityNotFoundExceptionClassName }}
     */
    public function execute(UseCaseRequest $useCaseRequest): void
    {
        ${{ skeletonModel.entityArgument }} = $this->{{ skeletonModel.getEntityIdMethod }}($useCaseRequest->{{ skeletonModel.entityIdMethod }}());
        $this->delete(${{ skeletonModel.entityArgument }});
    }

    private function {{ skeletonModel.getEntityIdMethod }}(int ${{ skeletonModel.entityIdArgument }}): {{ skeletonModel.entityShortName }}
    {
        return $this->{{ skeletonModel.entityGatewayArgument }}->findById(${{ skeletonModel.entityIdArgument }});
    }

    private function delete({{ skeletonModel.entityShortName }} ${{ skeletonModel.entityArgument }}): void
    {
        $this->{{ skeletonModel.entityGatewayArgument }}->delete(${{ skeletonModel.entityArgument }});
    }
}
