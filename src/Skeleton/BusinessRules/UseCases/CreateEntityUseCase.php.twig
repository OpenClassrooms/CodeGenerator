{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.entityClassName }};
use {{ skeletonModel.entityFactoryClassName }};
use {{ skeletonModel.entityGatewayClassName }};
use {{ skeletonModel.createEntityUseCaseRequestClassName }};
use {{ skeletonModel.entityUseCaseDetailResponseClassName }};
use {{ skeletonModel.entityUseCaseDetailResponseAssemblerClassName }};
use {{ skeletonModel.securityClassName }};
use {{ skeletonModel.transactionClassName }};
use {{ skeletonModel.useCaseClassName }};
use {{ skeletonModel.useCaseRequestClassName }};

class {{ skeletonModel.shortName }} implements UseCase
{
    use {{ skeletonModel.entityCommonHydratorTraitShortName }};

    /**
     * @var {{ skeletonModel.entityFactoryShortName }}
     */
    private ${{ skeletonModel.entityFactoryArgument }};

    /**
     * @var {{ skeletonModel.entityGatewayShortName }}
     */
    private ${{ skeletonModel.entityGatewayArgument }};

    /**
     * @var {{ skeletonModel.entityUseCaseDetailResponseAssemblerShortName }}
     */
    private ${{ skeletonModel.entityUseCaseDetailResponseAssemblerArgument }};

    public function __construct(
        {{ skeletonModel.entityUseCaseDetailResponseAssemblerShortName }} ${{ skeletonModel.entityUseCaseDetailResponseAssemblerArgument }},
        {{ skeletonModel.entityFactoryShortName }} ${{ skeletonModel.entityFactoryArgument }},
        {{ skeletonModel.entityGatewayShortName }} ${{ skeletonModel.entityGatewayArgument }}
    ) {
        $this->{{ skeletonModel.entityFactoryArgument }} = ${{ skeletonModel.entityFactoryArgument }};
        $this->{{ skeletonModel.entityGatewayArgument }} = ${{ skeletonModel.entityGatewayArgument }};
        $this->{{ skeletonModel.entityUseCaseDetailResponseAssemblerArgument }} = ${{ skeletonModel.entityUseCaseDetailResponseAssemblerArgument }};
    }

    /**
     * @Transaction
     * @Security(roles="")
     *
     * @param {{ skeletonModel.createEntityUseCaseRequestShortName }} $useCaseRequest
     */
    public function execute(UseCaseRequest $useCaseRequest): {{ skeletonModel.entityUseCaseDetailResponseShortName }}
    {
        ${{ skeletonModel.entityArgument }} = $this->create($useCaseRequest);
        $this->save(${{ skeletonModel.entityArgument }});

        return $this->createResponse(${{ skeletonModel.entityArgument }});
    }

    private function create({{ skeletonModel.createEntityUseCaseRequestShortName }} $request): {{ skeletonModel.entityShortName }}
    {
        ${{ skeletonModel.entityArgument }} = $this->{{ skeletonModel.entityFactoryArgument }}->create();
        $this->populateFromRequest(${{ skeletonModel.entityArgument }}, $request);

        return ${{ skeletonModel.entityArgument }};
    }

    private function save({{ skeletonModel.entityShortName }} ${{ skeletonModel.entityArgument }}): void
    {
        $this->{{ skeletonModel.entityGatewayArgument }}->insert(${{ skeletonModel.entityArgument }});
    }

    private function createResponse({{ skeletonModel.entityShortName }} ${{ skeletonModel.entityArgument }}): {{ skeletonModel.entityUseCaseDetailResponseShortName }}
    {
        return $this->{{ skeletonModel.entityUseCaseDetailResponseAssemblerArgument }}->create(${{ skeletonModel.entityArgument }});
    }
}
