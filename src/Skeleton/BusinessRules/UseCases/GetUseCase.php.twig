<?php
{% include "Header.php.twig" %}

namespace {{ useCaseNamespace }};

use {{ gatewayClassName }};
use {{ useCaseRequestInterface.className }};
use {{ useCaseDetailResponseAssemblerClassName }};
use {{ useCaseInterface.className }};

/**
 * @author {{ author }} <{{ authorEmail }}>
 */
class {{ useCaseShortClassName }} implements {{ useCaseInterface.shortClassName }}
{
    /**
     * @var \{{ gatewayClassName }}
     */
    private ${{ gatewayFieldName }};

    /**
     * @var \{{ useCaseDetailResponseAssemblerClassName }}
     */
    private ${{ useCaseDetailResponseAssemblerFieldName }};

    /**
     * {@inheritdoc}
     * @param \{{ useCaseRequestClassName }}|{{ useCaseRequestInterface.shortClassName }} $useCaseRequest
     *
     * @throws \{{ entityNotFoundExceptionClassName }}
     *
     * @return \{{ useCaseDetailResponseClassName }}
     */
    public function execute({{ useCaseRequestInterface.shortClassName }} $useCaseRequest)
    {
        ${{ entityFieldName }} = $this->{{ gatewayFieldName }}->find($useCaseRequest->getId());

        return $this->entityDetailResponseAssembler->create(${{ entityFieldName }});
    }

    public function set{{ gatewayFieldNameUC }}({{ gatewayShortClassName }} ${{ gatewayFieldName }})
    {
        $this->{{ gatewayFieldName }} = ${{ gatewayFieldName }};
    }

    public function set{{ useCaseDetailResponseAssemblerFieldNameUC }}({{ useCaseDetailResponseAssemblerShortClassName }} ${{ useCaseDetailResponseAssemblerFieldName }})
    {
        $this->{{ useCaseDetailResponseAssemblerFieldName }} = ${{ useCaseDetailResponseAssemblerFieldName }};
    }
}
