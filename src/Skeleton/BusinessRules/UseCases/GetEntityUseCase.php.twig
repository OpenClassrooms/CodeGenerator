{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.entityClassName }};
use {{ skeletonModel.entityGatewayClassName }};
use {{ skeletonModel.getEntityUseCaseRequestClassName }};
use {{ skeletonModel.entityUseCaseDetailResponseClassName }};
use {{ skeletonModel.entityUseCaseDetailResponseAssemblerClassName }};
use {{ skeletonModel.securityClassName }};
use {{ skeletonModel.useCaseClassName }};
use {{ skeletonModel.useCaseRequestClassName }};

class {{ skeletonModel.shortName }} implements UseCase
{
    private {{ skeletonModel.entityGatewayShortName }} ${{ skeletonModel.entityGatewayArgument }};

    private {{ skeletonModel.entityUseCaseDetailResponseAssemblerShortName }} $responseAssembler;

    public function __construct({{ skeletonModel.entityUseCaseDetailResponseAssemblerShortName }} $assembler, {{ skeletonModel.entityGatewayShortName }} ${{ skeletonModel.entityGatewayArgument }})
    {
        $this->{{ skeletonModel.entityGatewayArgument }} = ${{ skeletonModel.entityGatewayArgument }};
        $this->responseAssembler = $assembler;
    }

    /**
     * @Security(roles="")
     *
     * @param {{ skeletonModel.getEntityUseCaseRequestShortName }} $useCaseRequest
     *
     * @throws \{{ skeletonModel.entityNotFoundExceptionClassName }}
     */
    public function execute(UseCaseRequest $useCaseRequest): {{ skeletonModel.entityUseCaseDetailResponseShortName }}
    {
        ${{ skeletonModel.entityArgument }} = $this->get{{ skeletonModel.entityShortName }}($useCaseRequest->{{ skeletonModel.getEntityUseCaseRequestAccessor }}());

        return $this->buildResponse(${{ skeletonModel.entityArgument }});
    }

    /**
     * @throws \{{ skeletonModel.entityNotFoundExceptionClassName }}
     */
    private function get{{ skeletonModel.entityShortName }}(int ${{ skeletonModel.getEntityUseCaseRequestArgument }}): {{ skeletonModel.entityShortName }}
    {
        return $this->{{ skeletonModel.entityGatewayArgument }}->findById(${{ skeletonModel.getEntityUseCaseRequestArgument }});
    }

    private function buildResponse({{ skeletonModel.entityShortName }} ${{ skeletonModel.entityArgument }}): {{ skeletonModel.entityUseCaseDetailResponseShortName }}
    {
        return $this->responseAssembler->create(${{ skeletonModel.entityArgument }});
    }
}
