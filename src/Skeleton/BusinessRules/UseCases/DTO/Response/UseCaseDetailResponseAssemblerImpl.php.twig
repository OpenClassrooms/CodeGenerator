{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.entityClassName }};
use {{ skeletonModel.useCaseDetailResponseClassName }};
use {{ skeletonModel.useCaseDetailResponseAssemblerClassName }};

class {{ skeletonModel.shortName }} implements {{ skeletonModel.useCaseDetailResponseAssemblerShortName }}
{
    use {{ skeletonModel.useCaseResponseAssemblerTrait }};

    public function create({{ skeletonModel.entityShortName }} $entity): {{ skeletonModel.useCaseDetailResponseShortName }}
    {
        $response = new {{ skeletonModel.useCaseDetailResponseDTOShortName }}();

        $this->hydrateCommonFields($entity, $response);
{% for method in skeletonModel.entityMethods | sortNameByAlpha %}
        $response->{{ method.accessorName }} = $entity->{{ method.name }}();
{% endfor %}

        return $response;
    }
}
