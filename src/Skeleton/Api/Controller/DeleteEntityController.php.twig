{% include "Header.php.twig" %}

namespace {{ skeletonModel.namespace }};

use {{ skeletonModel.abstractControllerClassName }};
use {{ skeletonModel.entityNotFoundExceptionClassName }};
use {{ skeletonModel.deleteEntityRequestBuilderClassName }};
use {{ skeletonModel.deleteEntityClassName }};
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\Routing\Annotation\Route;

class {{ skeletonModel.shortName }} extends {{ skeletonModel.abstractControllerShortName }}
{
    private {{ skeletonModel.deleteEntityRequestBuilderShortName }} ${{ skeletonModel.deleteEntityRequestBuilderArgument }};

    public function __construct({{ skeletonModel.deleteEntityRequestBuilderShortName }} $builder)
    {
        $this->{{ skeletonModel.deleteEntityRequestBuilderArgument }} = $builder;
    }

    /**
     * @Route({{ skeletonModel.routeAnnotation }})
     *
     * @Security("")
     */
    public function deleteAction(int ${{ skeletonModel.entityIdArgument }}): JsonResponse
    {
        try {
            $this->{{ skeletonModel.deleteEntityMethod }}(${{ skeletonModel.entityIdArgument }});

            return $this->createDeletedResponse();
        } catch ({{ skeletonModel.entityNotFoundExceptionShortName}} $exception) {
            throw $this->createNotFoundException();
        }
    }

    private function {{ skeletonModel.deleteEntityMethod }}(int ${{ skeletonModel.entityIdArgument }}): void
    {
        $this->get({{ skeletonModel.deleteEntityShortName }}::class)->execute(
            $this->{{ skeletonModel.deleteEntityRequestBuilderArgument }}
                ->create()
                ->{{ skeletonModel.withEntityIdMethod}}(${{ skeletonModel.entityIdArgument }})
                ->build()
        );
    }
}
